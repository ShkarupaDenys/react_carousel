{"version":3,"sources":["components/Field/Field.tsx","components/Form/Form.tsx","components/Carousel/components/CarouselItem/CarouselItem.tsx","components/Carousel/components/CarouselList/CarouselList.tsx","components/Button/Button.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Field","this","props","name","type","value","checked","className","onChange","renderInput","id","htmlFor","PureComponent","Form","step","infinite","itemWidth","frameSize","animationDuration","onChangeStep","onChangeInfinite","onChangeItemWidth","onChangeFrameSize","onChangeAnimationDuration","CarouselItem","image","src","alt","style","width","CarouselList","images","translate","transform","transition","map","Button","dataCy","content","onClick","btnClassName","Carousel","defaultNextRest","length","Number","state","prevRest","nextRest","handleImg","e","direction","currentTarget","dataset","cy","shift","setState","prevState","curouselWidth","Component","App","handleChangeItemWidth","handleChangeFrameSize","handleChangeStep","handleChangeAnimationDuration","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.138e9e59.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport { Field as FieldTypes } from '../../types/Field';\n\nimport './Field.scss';\n\nexport class Field extends PureComponent<FieldTypes, {}> {\n  render() {\n    const {\n      name,\n      type,\n      value,\n      checked,\n      className,\n      onChange,\n    } = this.props;\n\n    const renderInput = type === 'number'\n      ? (\n        <input\n          id={name}\n          type={type}\n          onChange={onChange}\n          className=\"Field\"\n          value={value}\n        />\n      )\n      : (\n        <input\n          id={name}\n          type={type}\n          onChange={onChange}\n          className=\"Field\"\n          checked={checked}\n        />\n      );\n\n    return (\n      <div className={className}>\n        <label htmlFor={name}>\n          {name}\n        </label>\n        {renderInput}\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Field } from '../Field';\nimport { CarouselProps } from '../../types/CarouselProps';\nimport { FormHandlers } from '../../types/FormHandlers';\n\nimport './Form.scss';\n\nexport class Form extends PureComponent<FormHandlers & CarouselProps, {}> {\n  render() {\n    const {\n      step,\n      infinite,\n      itemWidth,\n      frameSize,\n      animationDuration,\n\n      onChangeStep,\n      onChangeInfinite,\n      onChangeItemWidth,\n      onChangeFrameSize,\n      onChangeAnimationDuration,\n    } = this.props;\n\n    return (\n      <form className=\"Form\">\n        <Field\n          name=\"Item width\"\n          type=\"number\"\n          onChange={onChangeItemWidth}\n          className=\"Form__field\"\n          value={itemWidth}\n        />\n        <Field\n          name=\"Frame size\"\n          type=\"number\"\n          onChange={onChangeFrameSize}\n          className=\"Form__field\"\n          value={frameSize}\n        />\n        <Field\n          name=\"Step\"\n          type=\"number\"\n          onChange={onChangeStep}\n          className=\"Form__field\"\n          value={step}\n        />\n        <Field\n          name=\"Animation duration\"\n          type=\"number\"\n          onChange={onChangeAnimationDuration}\n          className=\"Form__field\"\n          value={animationDuration}\n        />\n        <Field\n          name=\"Infinite\"\n          type=\"checkbox\"\n          onChange={onChangeInfinite}\n          className=\"Form__field\"\n          checked={infinite}\n        />\n      </form>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { CarouselProps } from '../../../../types/CarouselProps';\n\ntype PrivatelProps = Pick<CarouselProps, 'itemWidth'>;\n\ninterface Props {\n  image: string;\n}\n\nexport class CarouselItem extends PureComponent<Props & PrivatelProps, {}> {\n  render() {\n    const { image, itemWidth } = this.props;\n\n    return (\n      <li className=\"Carousel__item\">\n        <img\n          src={image}\n          alt={image}\n          className=\"Carousel__img\"\n          style={{ width: `${itemWidth}px` }}\n          width={itemWidth}\n        />\n      </li>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { CarouselItem } from '../CarouselItem';\nimport { CarouselProps } from '../../../../types/CarouselProps';\n\nimport './CarouselList.scss';\n\ntype PrivatelProps = Pick<\nCarouselProps, 'itemWidth' | 'animationDuration'\n>;\n\ninterface Props {\n  translate: number,\n  images: string[],\n}\n\nexport class CarouselList extends PureComponent<Props & PrivatelProps, {}> {\n  render() {\n    const {\n      images,\n      translate,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${translate}px)`,\n          transition: `transform ${animationDuration}ms linear`,\n        }}\n      >\n        {images.map((image: string) => (\n          <CarouselItem\n            key={image}\n            image={image}\n            itemWidth={itemWidth}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Button as ButtonProps } from '../../types/Button';\n\nimport './Button.scss';\n\nexport class Button extends PureComponent<ButtonProps, {}> {\n  render() {\n    const {\n      dataCy,\n      content,\n      className,\n      onClick,\n    } = this.props;\n\n    const btnClassName = `Button Button--${dataCy} ${className} ${className}--${dataCy}\n    `;\n\n    return (\n      <button\n        type=\"button\"\n        data-cy={dataCy}\n        className={btnClassName}\n        onClick={onClick}\n      >\n        {content}\n      </button>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { CarouselList } from './components/CarouselList';\nimport { Button } from '../Button';\nimport { CarouselProps } from '../../types/CarouselProps';\nimport { HandleCLick } from '../../types/HandleCLick';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\ninterface State {\n  translate: number;\n  nextRest: number;\n  prevRest: number;\n}\n\nexport class Carousel extends Component<Props & CarouselProps, State> {\n  defaultNextRest = this.props.images.length\n  * Number(this.props.itemWidth)\n  - Number(this.props.frameSize)\n  * Number(this.props.itemWidth);\n\n  state = {\n    translate: 0,\n    prevRest: 0,\n    nextRest: this.defaultNextRest,\n  };\n\n  handleImg: HandleCLick = e => {\n    const { cy: direction } = e.currentTarget.dataset;\n    const { itemWidth, step, infinite } = this.props;\n    const { nextRest, prevRest } = this.state;\n    const shift = Number(itemWidth) * Number(step);\n\n    switch (direction) {\n      case 'next':\n        if (infinite && !nextRest) {\n          this.setState({\n            translate: 0,\n            prevRest: 0,\n            nextRest: this.defaultNextRest,\n          });\n\n          return;\n        }\n\n        this.setState((prevState: State) => {\n          if (shift > prevState.nextRest) {\n            return {\n              translate: prevState.translate - prevState.nextRest,\n              nextRest: prevState.nextRest - prevState.nextRest,\n              prevRest: prevState.prevRest + prevState.nextRest,\n            };\n          }\n\n          return {\n            translate: prevState.translate - shift,\n            nextRest: prevState.nextRest - shift,\n            prevRest: prevState.prevRest + shift,\n          };\n        });\n        break;\n\n      case 'prev':\n        if (infinite && !prevRest) {\n          this.setState({\n            translate: -this.defaultNextRest,\n            prevRest: this.defaultNextRest,\n            nextRest: 0,\n          });\n\n          return;\n        }\n\n        this.setState((prevState: State) => {\n          if (shift > prevState.prevRest) {\n            return {\n              translate: prevState.translate + prevState.prevRest,\n              prevRest: prevState.prevRest - prevState.prevRest,\n              nextRest: prevState.nextRest + prevState.prevRest,\n            };\n          }\n\n          return {\n            translate: prevState.translate + shift,\n            prevRest: prevState.prevRest - shift,\n            nextRest: prevState.nextRest + shift,\n          };\n        });\n        break;\n\n      default:\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const { translate } = this.state;\n    const curouselWidth = Number(itemWidth) * Number(frameSize);\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${curouselWidth}px` }}\n      >\n        <div className=\"Carousel__container\">\n          <CarouselList\n            images={images}\n            translate={translate}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n          />\n        </div>\n        <Button\n          onClick={this.handleImg}\n          dataCy=\"prev\"\n          content=\"Prev\"\n          className=\"Carousel__button\"\n        />\n        <Button\n          onClick={this.handleImg}\n          dataCy=\"next\"\n          content=\"Next\"\n          className=\"Carousel__button\"\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Form } from './components/Form';\nimport { Carousel } from './components/Carousel';\nimport { CarouselProps } from './types/CarouselProps';\nimport { HandleEvent } from './types/HandleEvent';\n\nimport './App.scss';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass App extends Component<{}, CarouselProps> {\n  state: Readonly<CarouselProps> = {\n    step: '3',\n    frameSize: '3',\n    itemWidth: '130',\n    animationDuration: '1000',\n    infinite: false,\n  };\n\n  handleChangeItemWidth: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      itemWidth: value,\n    });\n  };\n\n  handleChangeFrameSize: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      frameSize: value,\n    });\n  };\n\n  handleChangeStep: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      step: value,\n    });\n  };\n\n  handleChangeAnimationDuration:HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      animationDuration: value,\n    });\n  };\n\n  onChangeInfinite = () => {\n    this.setState((prevState) => ({\n      infinite: !prevState.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      infinite,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n        <Form\n          step={step}\n          infinite={infinite}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          onChangeStep={this.handleChangeStep}\n          onChangeInfinite={this.onChangeInfinite}\n          onChangeItemWidth={this.handleChangeItemWidth}\n          onChangeFrameSize={this.handleChangeFrameSize}\n          onChangeAnimationDuration={this.handleChangeAnimationDuration}\n        />\n        <Carousel\n          step={step}\n          images={images}\n          infinite={infinite}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}