{"version":3,"sources":["components/Field/Field.tsx","components/Form/Form.tsx","components/Carousel/components/CarouselItem/CarouselItem.tsx","components/Carousel/components/CarouselList/CarouselList.tsx","components/Button/Button.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Field","this","props","name","type","value","checked","className","onChange","renderInput","id","htmlFor","PureComponent","Form","step","infinite","itemWidth","frameSize","animationDuration","handleChangeStep","handleChangeInfinite","handleChangeItemWidth","handleChangeFrameSize","handleChangeAnimationDuration","CarouselItem","image","src","alt","style","width","CarouselList","images","translate","transform","transition","map","Button","dataCy","content","disabled","onClick","btnClassName","Carousel","state","prevRest","nextRest","length","Number","handleImg","e","direction","currentTarget","dataset","cy","shift","setState","prevState","prev","next","prevProps","carouselWidth","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.413aebd6.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport { Field as FieldTypes } from '../../types/Field';\n\nimport './Field.scss';\n\nexport class Field extends PureComponent<FieldTypes, {}> {\n  render() {\n    const {\n      name,\n      type,\n      value,\n      checked,\n      className,\n      onChange,\n    } = this.props;\n\n    const renderInput = type === 'number'\n      ? (\n        <input\n          id={name}\n          type={type}\n          onChange={onChange}\n          className=\"Field\"\n          value={value}\n        />\n      )\n      : (\n        <input\n          id={name}\n          type={type}\n          onChange={onChange}\n          className=\"Field\"\n          checked={checked}\n        />\n      );\n\n    return (\n      <div className={className}>\n        <label htmlFor={name}>\n          {name}\n        </label>\n        {renderInput}\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Field } from '../Field';\nimport { CarouselProps } from '../../types/CarouselProps';\nimport { FormHandlers } from '../../types/FormHandlers';\n\nimport './Form.scss';\n\nexport class Form extends PureComponent<\nFormHandlers & Omit<CarouselProps, 'defaultNextRest'>, {}> {\n  render() {\n    const {\n      step,\n      infinite,\n      itemWidth,\n      frameSize,\n      animationDuration,\n\n      handleChangeStep,\n      handleChangeInfinite,\n      handleChangeItemWidth,\n      handleChangeFrameSize,\n      handleChangeAnimationDuration,\n    } = this.props;\n\n    return (\n      <form className=\"Form\">\n        <Field\n          name=\"Item width\"\n          type=\"number\"\n          onChange={handleChangeItemWidth}\n          className=\"Form__field\"\n          value={itemWidth}\n        />\n        <Field\n          name=\"Frame size\"\n          type=\"number\"\n          onChange={handleChangeFrameSize}\n          className=\"Form__field\"\n          value={frameSize}\n        />\n        <Field\n          name=\"Step\"\n          type=\"number\"\n          onChange={handleChangeStep}\n          className=\"Form__field\"\n          value={step}\n        />\n        <Field\n          name=\"Animation duration\"\n          type=\"number\"\n          onChange={handleChangeAnimationDuration}\n          className=\"Form__field\"\n          value={animationDuration}\n        />\n        <Field\n          name=\"Infinite\"\n          type=\"checkbox\"\n          onChange={handleChangeInfinite}\n          className=\"Form__field\"\n          checked={infinite}\n        />\n      </form>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { CarouselProps } from '../../../../types/CarouselProps';\n\ntype PrivatelProps = Pick<CarouselProps, 'itemWidth'>;\n\ninterface Props {\n  image: string;\n}\n\nexport class CarouselItem extends PureComponent<Props & PrivatelProps, {}> {\n  render() {\n    const { image, itemWidth } = this.props;\n\n    return (\n      <li className=\"Carousel__item\">\n        <img\n          src={image}\n          alt={image}\n          className=\"Carousel__img\"\n          style={{ width: `${itemWidth}px` }}\n          width={itemWidth}\n        />\n      </li>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { CarouselItem } from '../CarouselItem';\nimport { CarouselProps } from '../../../../types/CarouselProps';\n\nimport './CarouselList.scss';\n\ntype PrivatelProps = Pick<\nCarouselProps, 'itemWidth' | 'animationDuration'\n>;\n\ninterface Props {\n  translate: number,\n  images: string[],\n}\n\nexport class CarouselList extends PureComponent<Props & PrivatelProps, {}> {\n  render() {\n    const {\n      images,\n      translate,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${translate}px)`,\n          transition: `transform ${animationDuration}ms linear`,\n        }}\n      >\n        {images.map((image: string) => (\n          <CarouselItem\n            key={image}\n            image={image}\n            itemWidth={itemWidth}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Button as ButtonProps } from '../../types/Button';\n\nimport './Button.scss';\n\nexport class Button extends PureComponent<ButtonProps, {}> {\n  render() {\n    const {\n      dataCy,\n      content,\n      disabled,\n      className,\n      onClick,\n    } = this.props;\n\n    const btnClassName = `Button Button--${dataCy} ${className} ${className}--${dataCy}\n    `;\n\n    return (\n      <button\n        type=\"button\"\n        data-cy={dataCy}\n        className={btnClassName}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {content}\n      </button>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { CarouselList } from './components/CarouselList';\nimport { Button } from '../Button';\nimport { CarouselProps } from '../../types/CarouselProps';\nimport { HandleCLick } from '../../types/HandleCLick';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\ninterface State {\n  translate: number;\n  nextRest: number;\n  prevRest: number;\n}\n\nexport class Carousel extends Component<Props & CarouselProps, State> {\n  state = {\n    translate: 0,\n    prevRest: 0,\n    nextRest: this.props.images.length\n    * Number(this.props.itemWidth)\n    - Number(this.props.frameSize)\n    * Number(this.props.itemWidth),\n  };\n\n  componentDidUpdate(prevProps: Props & CarouselProps) {\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      images,\n    } = this.props;\n\n    if (prevProps.itemWidth !== itemWidth\n        || prevProps.frameSize !== frameSize\n        || prevProps.step !== step) {\n      this.setState({\n        nextRest: images.length\n        * Number(itemWidth)\n        - Number(frameSize)\n        * Number(itemWidth),\n      });\n\n      this.setState({ translate: 0, prevRest: 0 });\n    }\n  }\n\n  handleImg: HandleCLick = e => {\n    const { cy: direction } = e.currentTarget.dataset;\n    const {\n      step,\n      images,\n      infinite,\n      frameSize,\n      itemWidth,\n    } = this.props;\n    const { nextRest, prevRest } = this.state;\n    const shift = Number(itemWidth) * Number(step);\n\n    switch (direction) {\n      case 'next':\n        if (infinite && !nextRest) {\n          this.setState({\n            translate: 0,\n            prevRest: 0,\n            nextRest: images.length\n            * Number(itemWidth)\n            - Number(frameSize)\n            * Number(itemWidth),\n          });\n\n          return;\n        }\n\n        this.setState((prevState: State) => {\n          const { translate, prevRest: prev, nextRest: next } = prevState;\n\n          if (shift > nextRest) {\n            return {\n              translate: translate - next,\n              nextRest: next - next,\n              prevRest: prev + next,\n            };\n          }\n\n          return {\n            translate: translate - shift,\n            nextRest: next - shift,\n            prevRest: prev + shift,\n          };\n        });\n        break;\n\n      case 'prev':\n        if (infinite && !prevRest) {\n          this.setState({\n            translate: -(images.length\n            * Number(itemWidth)\n            - Number(frameSize)\n            * Number(itemWidth)),\n            prevRest: images.length\n            * Number(itemWidth)\n            - Number(frameSize)\n            * Number(itemWidth),\n            nextRest: 0,\n          });\n\n          return;\n        }\n\n        this.setState((prevState: State) => {\n          if (shift > prevState.prevRest) {\n            return {\n              translate: prevState.translate + prevState.prevRest,\n              prevRest: prevState.prevRest - prevState.prevRest,\n              nextRest: prevState.nextRest + prevState.prevRest,\n            };\n          }\n\n          return {\n            translate: prevState.translate + shift,\n            prevRest: prevState.prevRest - shift,\n            nextRest: prevState.nextRest + shift,\n          };\n        });\n        break;\n\n      default:\n    }\n  };\n\n  render() {\n    const {\n      images,\n      infinite,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const { translate, prevRest, nextRest } = this.state;\n    const carouselWidth = Number(itemWidth) * Number(frameSize);\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${carouselWidth}px` }}\n      >\n        <div className=\"Carousel__container\">\n          <CarouselList\n            images={images}\n            translate={translate}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n          />\n        </div>\n        <Button\n          onClick={this.handleImg}\n          dataCy=\"prev\"\n          content=\"Prev\"\n          className=\"Carousel__button\"\n          disabled={!infinite && !prevRest}\n        />\n        <Button\n          onClick={this.handleImg}\n          dataCy=\"next\"\n          content=\"Next\"\n          className=\"Carousel__button\"\n          disabled={!nextRest && !infinite}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Form } from './components/Form';\nimport { Carousel } from './components/Carousel';\nimport { CarouselProps } from './types/CarouselProps';\nimport { HandleEvent } from './types/HandleEvent';\n\nimport './App.scss';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass App extends Component<{}, CarouselProps> {\n  state = {\n    step: '3',\n    frameSize: '3',\n    itemWidth: '130',\n    animationDuration: '1000',\n    infinite: false,\n  };\n\n  handleChangeItemWidth: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      itemWidth: value,\n    });\n  };\n\n  handleChangeFrameSize: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      frameSize: value,\n    });\n  };\n\n  handleChangeStep: HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      step: value,\n    });\n  };\n\n  handleChangeAnimationDuration:HandleEvent = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({\n      animationDuration: value,\n    });\n  };\n\n  handleChangeInfinite = () => {\n    this.setState((prevState) => ({\n      infinite: !prevState.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      infinite,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n        <Form\n          step={step}\n          infinite={infinite}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          handleChangeStep={this.handleChangeStep}\n          handleChangeInfinite={this.handleChangeInfinite}\n          handleChangeItemWidth={this.handleChangeItemWidth}\n          handleChangeFrameSize={this.handleChangeFrameSize}\n          handleChangeAnimationDuration={this.handleChangeAnimationDuration}\n        />\n        <Carousel\n          step={step}\n          images={images}\n          infinite={infinite}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}